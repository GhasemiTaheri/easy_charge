// For format details, see https://containers.dev/implementors/json_reference/
{
    "name": "easy_charge_dev",
    "dockerComposeFile": [
        "../docker-compose.local.yml"
    ],
    "init": true,
    "mounts": [
        {
            "source": "./.devcontainer/bash_history",
            "target": "/home/dev-user/.bash_history",
            "type": "bind"
        },
        {
            "source": "~/.ssh",
            "target": "/home/dev-user/.ssh",
            "type": "bind"
        },
        {
            "source": "./.envs/.installed_packages/",
            "target": "/usr/local/lib/python3.12/site-packages",
            "type": "bind"
        }
    ],
    // Tells devcontainer.json supporting services / tools whether they should run
    // /bin/sh -c "while sleep 1000; do :; done" when starting the container instead of the containerâ€™s default command
    "overrideCommand": false,
    "service": "django",
    // "remoteEnv": {"PATH": "/home/dev-user/.local/bin:${containerEnv:PATH}"},
    "remoteUser": "dev-user",
    "workspaceFolder": "/app",
    // Set *default* container specific settings.json values on container create.
    "customizations": {
        "vscode": {
            "settings": {
                "editor.formatOnSave": true,
                "[python]": {
                    "analysis.autoImportCompletions": true,
                    "analysis.typeCheckingMode": "basic",
                    "defaultInterpreterPath": "/usr/local/bin/python",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "always"
                    },
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "languageServer": "Pylance",
                    "linting.enabled": true,
                    "linting.mypyEnabled": true,
                    "linting.mypyPath": "/usr/local/bin/mypy",
                }
            },
            "extensions": [
                "davidanson.vscode-markdownlint",
                "mrmlnc.vscode-duplicate",
                "visualstudioexptteam.vscodeintellicode",
                "visualstudioexptteam.intellicode-api-usage-examples",
                // python
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                // django
                "batisteo.vscode-django"
            ]
        }
    },
    "postCreateCommand": "cat .devcontainer/bashrc.override.sh >> ~/.bashrc"
}
